{"version":3,"file":"ej2-react-layouts.es2015.js","sources":["../src/es6/splitter/panesettings-directive.js","../src/es6/splitter/splitter.component.js","../src/es6/dashboard-layout/panels-directive.js","../src/es6/dashboard-layout/dashboardlayout.component.js","../src/es6/timeline/items-directive.js","../src/es6/timeline/timeline.component.js"],"sourcesContent":["import { ComplexBase } from '@syncfusion/ej2-react-base';\n/**\n * PanesDirective` represent a panes of the react splitter.\n * It must be contained in a Splitter component(`SplitterComponent`).\n * ```tsx\n * <SplitterComponent>\n *   <PaneSettingsDirective>\n *     <PaneDirective size={this.Pane1Size}></PaneDirective>\n *     <PaneDirective size={this.Pane2Size}></PaneDirective>\n *   <PaneSettingsDirective>\n * </SplitterComponent>\n * ```\n */\nexport class PaneDirective extends ComplexBase {\n}\nPaneDirective.moduleName = 'pane';\nexport class PanesDirective extends ComplexBase {\n}\nPanesDirective.propertyName = 'paneSettings';\nPanesDirective.moduleName = 'panes';\n","import * as React from 'react';\nimport { Splitter } from '@syncfusion/ej2-layouts';\nimport { ComponentBase, applyMixins } from '@syncfusion/ej2-react-base';\n/**\n * Represents the React Splitter Component\n * ```html\n * <Splitter></Splitter>\n * ```\n */\nexport class SplitterComponent extends Splitter {\n    constructor(props) {\n        super(props);\n        this.initRenderCalled = false;\n        this.checkInjectedModules = false;\n        this.directivekeys = { 'panes': 'pane' };\n        this.statelessTemplateProps = null;\n        this.templateProps = null;\n        this.immediateRender = false;\n        this.isReactMock = true;\n        this.portals = [];\n    }\n    render() {\n        this.isReactMock = false;\n        if (((this.element && !this.initRenderCalled) || this.refreshing) && !this.isReactForeceUpdate) {\n            super.render();\n            this.initRenderCalled = true;\n        }\n        else {\n            return React.createElement('div', this.getDefaultAttributes(), [].concat(this.props.children, this.portals));\n        }\n    }\n}\napplyMixins(SplitterComponent, [ComponentBase, React.Component]);\n","import { ComplexBase } from '@syncfusion/ej2-react-base';\n/**\n * `PanelsDirective` represent a presets of the react dashboardlayout.\n * It must be contained in a dashboardlayout component(`DashBoardLayoutComponent`).\n * ```tsx\n * <DashBoardLayoutComponent>\n * <PanelsDirective>\n * <PanelDirective></PanelDirective>\n * <PanelDirective></PanelDirective>\n * </PanelsDirective>\n * </DashBoardLayoutComponent>\n * ```\n */\nexport class PanelDirective extends ComplexBase {\n}\nPanelDirective.moduleName = 'panel';\nPanelDirective.complexTemplate = { 'panels.header': 'panels.header', 'panels.content': 'panels.content' };\nexport class PanelsDirective extends ComplexBase {\n}\nPanelsDirective.propertyName = 'panels';\nPanelsDirective.moduleName = 'panels';\n","import * as React from 'react';\nimport { DashboardLayout } from '@syncfusion/ej2-layouts';\nimport { ComponentBase, applyMixins } from '@syncfusion/ej2-react-base';\n/**\n * Represents the Essential JS 2 React DashboardLayout Component.\n * ```ts\n * <DashBoardLayoutComponent></DashBoardLayoutComponent>\n * ```\n */\nexport class DashboardLayoutComponent extends DashboardLayout {\n    constructor(props) {\n        super(props);\n        this.initRenderCalled = false;\n        this.checkInjectedModules = false;\n        this.directivekeys = { 'panels': 'panel' };\n        this.statelessTemplateProps = null;\n        this.templateProps = null;\n        this.immediateRender = false;\n        this.isReactMock = true;\n        this.portals = [];\n    }\n    render() {\n        this.isReactMock = false;\n        if (((this.element && !this.initRenderCalled) || this.refreshing) && !this.isReactForeceUpdate) {\n            super.render();\n            this.initRenderCalled = true;\n        }\n        else {\n            return React.createElement('div', this.getDefaultAttributes(), [].concat(this.props.children, this.portals));\n        }\n    }\n}\napplyMixins(DashboardLayoutComponent, [ComponentBase, React.Component]);\n","import { ComplexBase } from '@syncfusion/ej2-react-base';\n/**\n * `ItemDirective` represents a item of the React Timeline.\n * It must be contained in a Timeline component(`TimelineComponent`).\n * ```tsx\n * <TimelineComponent>\n *  <ItemsDirective>\n *   <ItemDirective dotCss= { 'e-icons e-folder' } content= { 'Item 1' } />\n *   <ItemDirective dotCss= { 'e-icons e-folder' } content= { 'Item 2' } />\n *  </ItemsDirective>\n * </TimelineComponent>\n * ```\n */\nexport class ItemDirective extends ComplexBase {\n}\nItemDirective.moduleName = 'item';\nexport class ItemsDirective extends ComplexBase {\n}\nItemsDirective.propertyName = 'items';\nItemsDirective.moduleName = 'items';\n","import * as React from 'react';\nimport { Timeline } from '@syncfusion/ej2-layouts';\nimport { ComponentBase, applyMixins } from '@syncfusion/ej2-react-base';\n/**\n * `TimelineComponent` represents the react Timeline Component.\n * ```ts\n * <TimelineComponent items={timelineItems} />\n * ```\n */\nexport class TimelineComponent extends Timeline {\n    constructor(props) {\n        super(props);\n        this.initRenderCalled = false;\n        this.checkInjectedModules = false;\n        this.directivekeys = { 'items': 'item' };\n        this.statelessTemplateProps = null;\n        this.templateProps = null;\n        this.immediateRender = false;\n        this.isReactMock = true;\n        this.portals = [];\n    }\n    render() {\n        this.isReactMock = false;\n        if (((this.element && !this.initRenderCalled) || this.refreshing) && !this.isReactForeceUpdate) {\n            super.render();\n            this.initRenderCalled = true;\n        }\n        else {\n            return React.createElement('div', this.getDefaultAttributes(), [].concat(this.props.children, this.portals));\n        }\n    }\n}\napplyMixins(TimelineComponent, [ComponentBase, React.Component]);\n"],"names":["React.createElement","React.Component"],"mappings":"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"}